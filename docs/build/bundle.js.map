{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/layout/PageCentered.svelte","../../node_modules/svelte/store/index.mjs","../../src/config.js","../../src/store/count.js","../../src/store/log.js","../../src/store/persistent.js","../../src/store/undoable.js","../../src/components/counter/Counter.svelte","../../src/components/ui/popup/tooltip/TooltipBody.svelte","../../src/components/ui/popup/tooltip/tooltip.js","../../node_modules/blurhash/dist/esm/base83.js","../../node_modules/blurhash/dist/esm/utils.js","../../node_modules/blurhash/dist/esm/error.js","../../node_modules/blurhash/dist/esm/decode.js","../../node_modules/svelte-waypoint/src/Waypoint.svelte","../../node_modules/svelte-image/src/Image.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<div>\n  <slot />\n</div>\n\n<style lang=\"scss\">\n  div {\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    max-width: 700px;\n    margin: auto;\n  }\n</style>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const config = process.env.production\n  ? {\n      apiUrl: \"https://mywebsite.com\",\n    }\n  : {\n      apiUrl: \"http://localhost:5554\",\n    };\n\nexport default config;\n","import undoable from \"./undoable.js\";\nimport persistent from \"./persistent.js\";\nimport log from \"./log.js\";\nimport config from \"../config.js\";\n\nconst storeLabel = \"count\";\nconst [countStore, logCleanup] = log(persistent(storeLabel, 10), storeLabel);\nconst [count, _undo, _redo, canUndo, canRedo, urdoCleanup] =\n  undoable(countStore);\n\nconst increment = () => {\n  count.update((count) => +count + 1);\n\n  // send this action to backend\n  console.log(\"Sending increment action to\", config.apiUrl);\n};\n\nconst decrement = () => {\n  count.update((count) => +count - 1);\n\n  // send this action to backend\n  console.log(\"Sending decrement action to\", config.apiUrl);\n};\n\nconst undo = () => {\n  _undo();\n};\n\nconst redo = () => {\n  _redo();\n};\n\nconst cleanup = () => {\n  logCleanup();\n  urdoCleanup();\n};\n\nexport default {\n  count: {\n    subscribe: count.subscribe,\n  },\n  actions: {\n    increment,\n    decrement,\n  },\n  urdo: { undo, redo, canUndo, canRedo },\n  cleanup,\n};\n","import { get } from \"svelte/store\";\n\nconst timeStamp = () => {\n  const date = new Date();\n  const hour = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const milliseconds = date.getMilliseconds();\n\n  return [\n    \"[%c\" +\n      (hour < 10 ? \"0\" + hour : hour) +\n      \":\" +\n      (minutes < 10 ? \"0\" + minutes : minutes) +\n      \":\" +\n      (seconds < 10 ? \"0\" + seconds : seconds) +\n      \".\" +\n      (\"00\" + milliseconds).slice(-3) +\n      \"%c]\",\n    \"color: gold\",\n    \"color: unset\",\n  ];\n};\n\nexport default function log(store, name) {\n  let previousValue = get(store);\n  const unsubscribe = store.subscribe((value) => {\n    const entryName = (name || \"value\") + \":\";\n    console.groupCollapsed(...timeStamp(), entryName, value);\n    console.log(\"Previous\", entryName, previousValue);\n    console.groupEnd();\n    previousValue = value;\n  });\n  return [store, unsubscribe];\n}\n","import { writable } from \"svelte/store\";\n\nconst read = (key) => {\n  try {\n    return JSON.parse(localStorage[key]);\n  } catch (e) {\n    console.warn(\"key\", key, \"not found in local storage\");\n  }\n};\n\nexport default function persistent(key, initial) {\n  const store = writable(read(key) || initial, () => {\n    return store.subscribe((value) => {\n      localStorage[key] = JSON.stringify(value);\n    });\n  });\n\n  return store;\n}\n","import { writable, derived, get } from \"svelte/store\";\n\nexport default function undoable(store) {\n  const initial = get(store);\n\n  const state = writable({\n    value: initial,\n    stack: [initial],\n    index: 0,\n  });\n\n  const undo = () => {\n    state.update(({ stack, index, value }) => {\n      if (index > 0) store.set((value = stack[--index]));\n      return { value, stack, index };\n    });\n  };\n\n  const redo = () => {\n    state.update(({ stack, index, value }) => {\n      if (index < stack.length - 1) store.set((value = stack[++index]));\n      return { value, stack, index };\n    });\n  };\n\n  const update = (fn) => {\n    store.update((old_value) => {\n      const value = fn(old_value);\n\n      state.update(({ stack, index }) => {\n        stack.length = ++index; // clear forward history\n        stack[index] = value;\n        return { value, stack, index };\n      });\n\n      return value;\n    });\n  };\n\n  const set = (value) => {\n    update(() => value);\n  };\n\n  const cleanup = () => {\n    const current = get(state);\n    state.set({\n      value: current.value,\n      stack: [current.value],\n      index: 0,\n    });\n  };\n\n  const value = derived(state, ({ value }) => value);\n  const urdoStore = { subscribe: value.subscribe, update, set };\n\n  const canUndo = derived(state, ({ index }) => index > 0);\n  const canRedo = derived(\n    state,\n    ({ index, stack }) => index < stack.length - 1\n  );\n\n  return [urdoStore, undo, redo, canUndo, canRedo, cleanup];\n}\n","<script>\n  import { onDestroy } from \"svelte\";\n  import countSlice from \"../../store/count.js\";\n  const { count, actions, urdo, cleanup } = countSlice;\n  const { increment, decrement } = actions;\n  const { undo, redo, canUndo, canRedo } = urdo;\n\n  onDestroy(cleanup);\n\n  const handleKeydown = (e) => {\n    if (e.ctrlKey) {\n      if (e.which === 89) {\n        e.preventDefault();\n        redo(); // (Ctrl+Y)\n      } else if (e.which === 90) {\n        e.preventDefault();\n        undo(); // (Ctrl+Z)\n      }\n    }\n  };\n</script>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<div class=\"title\">Count: {$count}</div>\n<div>\n  <button class=\"btn btn-success\" on:click={increment}>+</button>\n  <button class=\"btn btn-danger\" on:click={decrement}>-</button>\n</div>\n<div>\n  <button class=\"btn btn-warning\" on:click={undo} disabled={!$canUndo}>\n    <img src=\"images/undo.png\" alt=\"undo\" width=\"20px\" height=\"20px\" />\n  </button>\n  <button class=\"btn btn-info\" on:click={redo} disabled={!$canRedo}>\n    <img src=\"images/redo.png\" alt=\"redo\" width=\"20px\" height=\"20px\" />\n  </button>\n</div>\n\n<style lang=\"scss\">\n  :global(.title) {\n    font-size: 50px;\n  }\n\n  .btn {\n    $primary: #007bff;\n    $secondary: #6c757d;\n    $success: #28a745;\n    $info: #17a2b8;\n    $warning: #ffc107;\n    $danger: #dc3545;\n    $extrude-size: 3px;\n\n    position: relative;\n    top: 0px;\n    width: 80px;\n    height: 25px;\n    margin: 7px;\n    border: 0;\n    border-radius: 5px;\n    cursor: pointer;\n    text-align: center;\n    font-size: 20px;\n    text-shadow: 0 0 1px #fff;\n    user-select: none;\n    transition: All 250ms ease;\n\n    &:active {\n      position: relative;\n      top: $extrude-size;\n      box-shadow: none !important;\n    }\n\n    &:disabled {\n      pointer-events: none;\n      background-color: $secondary;\n      border: 1px solid darken($secondary, 5%);\n      box-shadow: 0px $extrude-size 0px darken($secondary, 5%);\n    }\n\n    &-success {\n      color: white;\n      background-color: $success;\n      border: 1px solid darken($success, 5%);\n      box-shadow: 0px $extrude-size 0px darken($success, 5%);\n    }\n\n    &-danger {\n      color: white;\n      background-color: $danger;\n      border: 1px solid darken($danger, 5%);\n      box-shadow: 0px $extrude-size 0px darken($danger, 5%);\n    }\n\n    &-warning {\n      color: white;\n      background-color: $warning;\n      border: 1px solid darken($warning, 5%);\n      box-shadow: 0px $extrude-size 0px darken($warning, 5%);\n    }\n\n    &-info {\n      color: white;\n      background-color: $info;\n      border: 1px solid darken($info, 5%);\n      box-shadow: 0px $extrude-size 0px darken($info, 5%);\n    }\n  }\n</style>\n","<script>\n  export let title;\n  export let x;\n  export let y;\n</script>\n\n<div style=\"top: {y + 5}px; left: {x + 5}px;\">\n  {title}\n</div>\n\n<style>\n  div {\n    border: 1px solid #ddd;\n    box-shadow: 1px 1px 1px #ddd;\n    background: white;\n    border-radius: 4px;\n    padding: 4px;\n    font-size: 1.3rem;\n    position: absolute;\n  }\n</style>\n","import TooltipBody from \"./TooltipBody.svelte\";\n\nexport default function tooltip(element) {\n  let title;\n  let tooltipBody;\n\n  const mouseOver = (event) => {\n    // To prevent showing the default browser tooltip\n    // remove the `title` attribute\n    title = element.getAttribute(\"title\");\n    element.removeAttribute(\"title\");\n\n    tooltipBody = new TooltipBody({\n      props: {\n        title: title,\n        x: event.pageX,\n        y: event.pageY,\n      },\n      target: document.body,\n    });\n  };\n\n  const mouseMove = (event) => {\n    tooltipBody.$set({\n      x: event.pageX,\n      y: event.pageY,\n    });\n  };\n\n  const mouseLeave = () => {\n    tooltipBody.$destroy();\n    // Restore the `title` attribute\n    element.setAttribute(\"title\", title);\n  };\n\n  element.addEventListener(\"mouseover\", mouseOver);\n  element.addEventListener(\"mouseleave\", mouseLeave);\n  element.addEventListener(\"mousemove\", mouseMove);\n\n  return {\n    destroy() {\n      element.removeEventListener(\"mouseover\", mouseOver);\n      element.removeEventListener(\"mouseleave\", mouseLeave);\n      element.removeEventListener(\"mousemove\", mouseMove);\n    },\n  };\n}\n","const digitCharacters = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"#\",\n    \"$\",\n    \"%\",\n    \"*\",\n    \"+\",\n    \",\",\n    \"-\",\n    \".\",\n    \":\",\n    \";\",\n    \"=\",\n    \"?\",\n    \"@\",\n    \"[\",\n    \"]\",\n    \"^\",\n    \"_\",\n    \"{\",\n    \"|\",\n    \"}\",\n    \"~\"\n];\nexport const decode83 = (str) => {\n    let value = 0;\n    for (let i = 0; i < str.length; i++) {\n        const c = str[i];\n        const digit = digitCharacters.indexOf(c);\n        value = value * 83 + digit;\n    }\n    return value;\n};\nexport const encode83 = (n, length) => {\n    var result = \"\";\n    for (let i = 1; i <= length; i++) {\n        let digit = (Math.floor(n) / Math.pow(83, length - i)) % 83;\n        result += digitCharacters[Math.floor(digit)];\n    }\n    return result;\n};\n//# sourceMappingURL=base83.js.map","export const sRGBToLinear = (value) => {\n    let v = value / 255;\n    if (v <= 0.04045) {\n        return v / 12.92;\n    }\n    else {\n        return Math.pow((v + 0.055) / 1.055, 2.4);\n    }\n};\nexport const linearTosRGB = (value) => {\n    let v = Math.max(0, Math.min(1, value));\n    if (v <= 0.0031308) {\n        return Math.round(v * 12.92 * 255 + 0.5);\n    }\n    else {\n        return Math.round((1.055 * Math.pow(v, 1 / 2.4) - 0.055) * 255 + 0.5);\n    }\n};\nexport const sign = (n) => (n < 0 ? -1 : 1);\nexport const signPow = (val, exp) => sign(val) * Math.pow(Math.abs(val), exp);\n//# sourceMappingURL=utils.js.map","export class ValidationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"ValidationError\";\n        this.message = message;\n    }\n}\n//# sourceMappingURL=error.js.map","import { decode83 } from \"./base83\";\nimport { sRGBToLinear, signPow, linearTosRGB } from \"./utils\";\nimport { ValidationError } from \"./error\";\n/**\n * Returns an error message if invalid or undefined if valid\n * @param blurhash\n */\nconst validateBlurhash = (blurhash) => {\n    if (!blurhash || blurhash.length < 6) {\n        throw new ValidationError(\"The blurhash string must be at least 6 characters\");\n    }\n    const sizeFlag = decode83(blurhash[0]);\n    const numY = Math.floor(sizeFlag / 9) + 1;\n    const numX = (sizeFlag % 9) + 1;\n    if (blurhash.length !== 4 + 2 * numX * numY) {\n        throw new ValidationError(`blurhash length mismatch: length is ${blurhash.length} but it should be ${4 + 2 * numX * numY}`);\n    }\n};\nexport const isBlurhashValid = (blurhash) => {\n    try {\n        validateBlurhash(blurhash);\n    }\n    catch (error) {\n        return { result: false, errorReason: error.message };\n    }\n    return { result: true };\n};\nconst decodeDC = (value) => {\n    const intR = value >> 16;\n    const intG = (value >> 8) & 255;\n    const intB = value & 255;\n    return [sRGBToLinear(intR), sRGBToLinear(intG), sRGBToLinear(intB)];\n};\nconst decodeAC = (value, maximumValue) => {\n    const quantR = Math.floor(value / (19 * 19));\n    const quantG = Math.floor(value / 19) % 19;\n    const quantB = value % 19;\n    const rgb = [\n        signPow((quantR - 9) / 9, 2.0) * maximumValue,\n        signPow((quantG - 9) / 9, 2.0) * maximumValue,\n        signPow((quantB - 9) / 9, 2.0) * maximumValue\n    ];\n    return rgb;\n};\nconst decode = (blurhash, width, height, punch) => {\n    validateBlurhash(blurhash);\n    punch = punch | 1;\n    const sizeFlag = decode83(blurhash[0]);\n    const numY = Math.floor(sizeFlag / 9) + 1;\n    const numX = (sizeFlag % 9) + 1;\n    const quantisedMaximumValue = decode83(blurhash[1]);\n    const maximumValue = (quantisedMaximumValue + 1) / 166;\n    const colors = new Array(numX * numY);\n    for (let i = 0; i < colors.length; i++) {\n        if (i === 0) {\n            const value = decode83(blurhash.substring(2, 6));\n            colors[i] = decodeDC(value);\n        }\n        else {\n            const value = decode83(blurhash.substring(4 + i * 2, 6 + i * 2));\n            colors[i] = decodeAC(value, maximumValue * punch);\n        }\n    }\n    const bytesPerRow = width * 4;\n    const pixels = new Uint8ClampedArray(bytesPerRow * height);\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let r = 0;\n            let g = 0;\n            let b = 0;\n            for (let j = 0; j < numY; j++) {\n                for (let i = 0; i < numX; i++) {\n                    const basis = Math.cos((Math.PI * x * i) / width) *\n                        Math.cos((Math.PI * y * j) / height);\n                    let color = colors[i + j * numX];\n                    r += color[0] * basis;\n                    g += color[1] * basis;\n                    b += color[2] * basis;\n                }\n            }\n            let intR = linearTosRGB(r);\n            let intG = linearTosRGB(g);\n            let intB = linearTosRGB(b);\n            pixels[4 * x + 0 + y * bytesPerRow] = intR;\n            pixels[4 * x + 1 + y * bytesPerRow] = intG;\n            pixels[4 * x + 2 + y * bytesPerRow] = intB;\n            pixels[4 * x + 3 + y * bytesPerRow] = 255; // alpha\n        }\n    }\n    return pixels;\n};\nexport default decode;\n//# sourceMappingURL=decode.js.map","<script>\n  import { createEventDispatcher, onDestroy } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let offset = 0;\n  export let throttle = 250;\n  export let c = '';\n  export let style = '';\n  export let once = true;\n  export let threshold = 1.0;\n  export let disabled = false;\n\n  let className = \"\";\n  export { className as class };\n\n  let visible = disabled;\n  let wasVisible = false;\n  let intersecting = false;\n  let removeHandlers = () => {};\n\n  function throttleFn(fn, time) {\n    let last, deferTimer;\n\n    return () => {\n      const now = +new Date;\n\n      if (last && now < last + time) {\n        // hold on to it\n        clearTimeout(deferTimer);\n        deferTimer = setTimeout(function () {\n          last = now;\n          fn();\n        }, time);\n      } else {\n        last = now;\n        fn();\n      }\n    };\n  }\n\n  function callEvents(wasVisible, observer, node) {\n    if (visible && !wasVisible) {\n      dispatch('enter');\n      return;\n    }\n\n    if (wasVisible && !intersecting) {\n      dispatch('leave');\n    }\n\n    if (once && wasVisible && !intersecting) {\n      removeHandlers();\n    }\n  }\n\n  function waypoint(node) {\n    if (!window || disabled) return;\n\n    if (window.IntersectionObserver && window.IntersectionObserverEntry) {\n      const observer = new IntersectionObserver(([ { isIntersecting } ]) => {\n        wasVisible = visible;\n\n        intersecting = isIntersecting;\n\n        if (wasVisible && once && !isIntersecting) {\n          callEvents(wasVisible, observer, node);\n          return;\n        }\n\n        visible = isIntersecting;\n\n        callEvents(wasVisible, observer, node);\n      }, {\n        rootMargin: offset + 'px',\n        threshold,\n      });\n\n      observer.observe(node);\n\n      removeHandlers = () => observer.unobserve(node);\n\n      return removeHandlers;\n    }\n\n    function checkIsVisible() {\n      // Kudos https://github.com/twobin/react-lazyload/blob/master/src/index.jsx#L93\n      if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return;\n\n      let top;\n      let height;\n\n      try {\n        ({ top, height } = node.getBoundingClientRect());\n      } catch (e) {\n        ({ top, height } = defaultBoundingClientRect);\n      }\n\n      const windowInnerHeight = window.innerHeight\n        || document.documentElement.clientHeight;\n\n      wasVisible = visible;\n      intersecting = (top - offset <= windowInnerHeight) &&\n        (top + height + offset >= 0);\n\n      if (wasVisible && once && !isIntersecting) {\n        callEvents(wasVisible, observer, node);\n        return;\n      }\n\n      visible = intersecting;\n\n      callEvents(wasVisible);\n    }\n\n    checkIsVisible();\n\n    const throttled = throttleFn(checkIsVisible, throttle);\n\n    window.addEventListener('scroll', throttled);\n    window.addEventListener('resize', throttled);\n\n    removeHandlers = () => {\n      window.removeEventListener('scroll', throttled);\n      window.removeEventListener('resize', throttled);\n    }\n\n    return removeHandlers;\n  }\n</script>\n\n<style>\n.wrapper {\n  display: inline-block;\n}\n</style>\n\n<div class=\"wrapper {className} {c}\" {style} use:waypoint>\n  {#if visible}\n    <slot />\n  {/if}\n</div>\n","<script>\n  import { decode } from 'blurhash';\n  import Waypoint from \"svelte-waypoint\";\n\n  export let c = \"\"; // deprecated\n  export let alt = \"\";\n  export let width = null;\n  export let height = null;\n  export let src = \"\";\n  export let srcset = \"\";\n  export let srcsetWebp = \"\";\n  export let ratio = \"100%\";\n  export let blur = true;\n  export let sizes = \"(max-width: 1000px) 100vw, 1000px\";\n  export let offset = 0;\n  export let threshold = 1.0;\n  export let lazy = true;\n  export let wrapperClass = \"\";\n  export let placeholderClass = \"\";\n  export let blurhash = null;\n  export let blurhashSize = null;\n\n  let className = \"\";\n  export { className as class };\n\n  let loaded = !lazy;\n\n  function load(img) {\n    img.onload = () => (loaded = true);\n  }\n\n  function decodeBlurhash(canvas) {\n    const pixels = decode(blurhash, blurhashSize.width, blurhashSize.height);\n    const ctx = canvas.getContext('2d');\n    const imageData = ctx.createImageData(blurhashSize.width, blurhashSize.height);\n    imageData.data.set(pixels);\n    ctx.putImageData(imageData, 0, 0);\n  }\n</script>\n\n<style>\n  img, canvas {\n    object-position: center;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    will-change: opacity;\n  }\n\n  .blur {\n    filter: blur(15px);\n    transition: opacity 1200ms;\n  }\n\n  .placeholder {\n    opacity: 1;\n    width: 100%;\n    height: 100%;\n    transition: opacity 1200ms ease-out;\n    transition-delay: 0.4s;\n  }\n\n  .main {\n    opacity: 0;\n    transition: opacity 1200ms ease-out;\n    transition-delay: 0.4s;\n  }\n\n  .loaded .placeholder {\n    opacity: 0;\n  }\n\n  .loaded .main {\n    opacity: 1;\n  }\n</style>\n\n<Waypoint\n  class=\"{wrapperClass}\"\n  style=\"min-height: 100px; width: 100%;\"\n  once\n  {threshold}\n  {offset}\n  disabled=\"{!lazy}\"\n>  \n  <div class:loaded style=\"position: relative; width: 100%;\">\n    <div style=\"position: relative; overflow: hidden;\">\n      <div style=\"width:100%;padding-bottom:{ratio};\"></div>\n      {#if blurhash}\n        <canvas class=\"placeholder\" use:decodeBlurhash width={blurhashSize.width} height={blurhashSize.height} />\n      {:else}\n        <img class=\"placeholder {placeholderClass}\" class:blur {src} {alt} />\n      {/if}\n      <picture>\n        <source type=\"image/webp\" srcset=\"{srcsetWebp}\" {sizes} />\n        <source {srcset} {sizes} />\n        <img\n          {src}\n          use:load\n          class=\"main {c} {className}\"\n          {alt}\n          {width}\n          {height}\n        />\n      </picture>\n    </div>\n  </div>\n</Waypoint>\n","<script>\n  import PageCentered from \"./components/layout/PageCentered.svelte\";\n  import Counter from \"./components/counter/Counter.svelte\";\n  import tooltip from \"./components/ui/popup/tooltip/tooltip.js\";\n  import Image from \"svelte-image\";\n</script>\n\n<div class=\"container\">\n  <svg\n    width=\"65\"\n    height=\"52\"\n    viewBox=\"0 0 65 52\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M31.64 5.56C31.64 6.616 30.968 7.384 29.624 7.864C28.664 8.248 27.544 8.44 26.264 8.44C24.984 8.44 23.64 8.264 22.232 7.912C20.76 7.624 19.528 7.128 18.536 6.424C18.472 6.36 18.44 6.296 18.44 6.232C18.44 6.168 18.472 6.136 18.536 6.136C18.632 6.136 18.696 6.152 18.728 6.184C20.488 7.336 22.968 7.912 26.168 7.912C27.256 7.912 28.248 7.72 29.144 7.336C30.04 6.92 30.488 6.312 30.488 5.512C30.488 4.36 29.656 3.496 27.992 2.92C26.84 2.504 25.544 2.296 24.104 2.296C20.104 2.296 17.368 3.592 15.896 6.184C15.448 6.984 15.224 7.816 15.224 8.68C15.224 10.632 16.312 12.344 18.488 13.816C19.928 14.776 21.928 16.056 24.488 17.656C26.632 19.416 27.704 21.608 27.704 24.232C27.704 27.784 25.88 30.632 22.232 32.776C19.192 34.568 15.928 35.464 12.44 35.464C8.984 35.464 6.232 34.856 4.184 33.64C1.624 32.168 0.344 30.04 0.344 27.256C0.344 24.44 1.368 22.152 3.416 20.392C5.496 18.6 7.896 17.704 10.616 17.704C12.12 17.704 12.872 17.832 12.872 18.088C12.872 18.152 12.616 18.184 12.104 18.184C11.592 18.184 11.32 18.184 11.288 18.184C8.696 18.184 6.456 18.952 4.568 20.488C2.552 22.056 1.544 24.168 1.544 26.824C1.544 29.448 2.456 31.48 4.28 32.92C6.104 34.392 8.248 35.128 10.712 35.128C13.176 35.128 15.8 34.552 18.584 33.4C23.384 31.48 25.784 28.488 25.784 24.424C25.784 21.928 24.68 19.912 22.472 18.376C21.768 17.864 20.728 17.176 19.352 16.312C17.976 15.448 17 14.824 16.424 14.44C14.248 12.968 13.16 11.176 13.16 9.064C13.16 7.656 13.688 6.376 14.744 5.224C13.784 5.32 12.968 5.784 12.296 6.616C11.656 7.512 11.336 8.44 11.336 9.4C11.336 11.608 12.376 13.496 14.456 15.064C15.128 15.576 17.048 16.904 20.216 19.048C22.264 20.744 23.288 22.728 23.288 25C23.288 27.272 22.168 29.368 19.928 31.288C17.688 33.24 15.4 34.216 13.064 34.216C12.904 34.216 12.824 34.168 12.824 34.072C12.824 33.88 12.936 33.784 13.16 33.784C14.152 33.656 15 33.48 15.704 33.256C17.432 32.552 18.984 31.432 20.36 29.896C21.736 28.36 22.424 26.744 22.424 25.048C22.424 22.68 21.416 20.744 19.4 19.24C18.792 18.76 17.848 18.104 16.568 17.272C15.32 16.408 14.392 15.752 13.784 15.304C11.736 13.8 10.712 11.848 10.712 9.448C10.712 8.264 11.128 7.224 11.96 6.328C12.792 5.4 13.784 4.936 14.936 4.936H15.032C17.304 2.76 20.232 1.672 23.816 1.672C27.4 1.672 29.816 2.456 31.064 4.024C31.448 4.504 31.64 5.016 31.64 5.56ZM64.7499 8.104C64.7499 8.232 64.6859 8.328 64.5579 8.392C64.4299 8.424 64.0459 8.536 63.4059 8.728C61.6459 9.848 60.1739 12.968 58.9899 18.088L56.1579 29.944C54.8139 34.872 53.2939 38.856 51.5979 41.896C49.3899 45.864 46.6859 48.744 43.4859 50.536C42.0139 51.336 40.3019 51.736 38.3499 51.736C36.3979 51.736 34.5259 51.032 32.7339 49.624C31.0699 48.216 29.8699 46.44 29.1339 44.296C29.1019 44.264 29.0859 44.168 29.0859 44.008C29.0859 43.88 29.1339 43.816 29.2299 43.816C29.2939 43.816 29.4059 43.944 29.5659 44.2C29.8539 45.064 30.1739 45.72 30.5259 46.168C32.0939 48.6 34.5099 49.816 37.7739 49.816C39.8219 49.816 41.7099 49.336 43.4379 48.376C46.7979 46.488 49.4059 43.544 51.2619 39.544C52.5739 36.6 53.8379 31.912 55.0539 25.48C55.4699 23.336 56.1899 20.2 57.2139 16.072C55.0059 19.848 52.7179 23.208 50.3499 26.152C46.6379 30.824 43.6459 33.16 41.3739 33.16C39.3259 33.16 38.3019 31.768 38.3019 28.984C38.3019 26.2 39.2299 22.456 41.0859 17.752C42.9739 13.048 44.9579 8.92 47.0379 5.368L45.1179 4.6C42.4619 8.28 40.1099 12.952 38.0619 18.616C36.0459 24.248 35.0379 29.112 35.0379 33.208C35.0379 33.496 34.9579 33.64 34.7979 33.64C34.6699 33.64 34.6059 33.176 34.6059 32.248C34.6059 28.12 35.6299 23.352 37.6779 17.944C39.7259 12.504 42.0619 8.008 44.6859 4.456C42.7659 3.816 40.9419 3.496 39.2139 3.496C35.8219 3.496 32.9899 4.584 30.7179 6.76C30.1099 7.336 29.8059 7.96 29.8059 8.632C29.8059 9.848 30.8299 10.888 32.8779 11.752C33.6139 12.104 33.9819 12.312 33.9819 12.376C33.9819 12.408 33.8859 12.424 33.6939 12.424C33.5019 12.424 33.1339 12.296 32.5899 12.04C30.0299 10.888 28.7499 9.56 28.7499 8.056C28.7499 7.32 29.1179 6.584 29.8539 5.848C32.1579 3.512 35.5019 2.344 39.8859 2.344C41.8699 2.344 43.8219 2.6 45.7419 3.112C47.1819 1.352 48.0939 0.471998 48.4779 0.471998C48.6059 0.471998 48.6539 0.519999 48.6219 0.615999C48.5899 0.711998 48.2699 1.032 47.6619 1.576C47.0859 2.12 46.5899 2.664 46.1739 3.208C48.6699 3.944 49.9179 4.584 49.9179 5.128V5.272C49.0859 6.552 48.3499 7.848 47.7099 9.16C43.1019 17.8 40.7979 24.504 40.7979 29.272C40.7979 31.256 41.2939 32.248 42.2859 32.248C43.7579 32.248 46.2379 30.12 49.7259 25.864C52.7019 22.152 55.3579 18.312 57.6939 14.344C58.4299 11.112 59.5819 9.112 61.1499 8.344C61.9179 7.96 62.7019 7.768 63.5019 7.768C64.3339 7.768 64.7499 7.88 64.7499 8.104Z\"\n      fill=\"url(#paint0_linear)\"\n    />\n    <defs>\n      <linearGradient\n        id=\"paint0_linear\"\n        x1=\"68.9362\"\n        y1=\"21.8038\"\n        x2=\"68.9362\"\n        y2=\"24.9461\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stop-color=\"#C082F1\" />\n        <stop offset=\"1\" stop-color=\"#5DE3E3\" />\n      </linearGradient>\n    </defs>\n  </svg>\n\n  <PageCentered>\n    <div class=\"title\" title=\"From Svelte\" use:tooltip>Hello World</div>\n    <div class=\"imgContainer\">\n      <Image src=\"images/kitty.jpg\" alt=\"kitty\" />\n    </div>\n    <Counter />\n    <!-- using title attribute sets the default tooltip -->\n    <h3 title=\"From Svelte\">The End</h3>\n  </PageCentered>\n\n  <svg\n    class=\"blob1\"\n    width=\"200\"\n    height=\"200\"\n    viewBox=\"0 0 200 200\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill=\"#92d7ff\"\n      d=\"M49.5,-12.7C56.7,5.9,49.8,32.5,29.5,49.3C9.1,66.1,-24.6,73.2,-42,60.1C-59.4,46.9,-60.5,13.4,-50.7,-8.8C-41,-31,-20.5,-41.9,0.3,-42.1C21.2,-42.2,42.4,-31.4,49.5,-12.7Z\"\n      transform=\"translate(100 100)\"\n    />\n  </svg>\n\n  <svg\n    class=\"blob2\"\n    width=\"200\"\n    height=\"200\"\n    viewBox=\"0 0 200 200\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill=\"#F5BD7A\"\n      d=\"M50.4,-13.6C59.6,11.8,57.3,43.8,38.6,58.7C19.9,73.6,-15.3,71.5,-40.2,53.8C-65.1,36,-79.8,2.6,-71.4,-21.7C-63,-46.1,-31.5,-61.4,-5.5,-59.6C20.6,-57.9,41.2,-39,50.4,-13.6Z\"\n      transform=\"translate(100 100)\"\n    />\n  </svg>\n\n  <svg\n    class=\"blob3\"\n    width=\"200\"\n    height=\"200\"\n    viewBox=\"0 0 200 200\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill=\"#D6D2DD\"\n      d=\"M41.7,-16.6C48.7,7.9,45.3,32.7,27.1,48.6C8.9,64.5,-24,71.5,-43.5,57.8C-63,44.2,-69.1,9.9,-59.6,-18.1C-50.1,-46,-25,-67.6,-3.8,-66.4C17.4,-65.1,34.7,-41,41.7,-16.6Z\"\n      transform=\"translate(100 100)\"\n    />\n  </svg>\n\n  <svg\n    class=\"blob4\"\n    width=\"200\"\n    height=\"200\"\n    viewBox=\"0 0 200 200\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill=\"#A7F0BA\"\n      d=\"M41.9,-15.7C48.7,7.3,44.7,31.7,27,46.7C9.4,61.8,-22,67.6,-38,55.3C-54,43,-54.7,12.5,-45.8,-13.4C-36.9,-39.2,-18.4,-60.5,-0.4,-60.4C17.6,-60.2,35.1,-38.7,41.9,-15.7Z\"\n      transform=\"translate(100 100)\"\n    />\n  </svg>\n</div>\n\n<style lang=\"scss\">\n  .blob1,\n  .blob2,\n  .blob3,\n  .blob4 {\n    position: fixed;\n    z-index: -1;\n    filter: blur(5px);\n  }\n\n  .blob1 {\n    animation: move1 250s infinite alternate;\n  }\n  .blob2 {\n    animation: move2 250s infinite alternate;\n  }\n  .blob3 {\n    animation: move3 250s infinite alternate;\n  }\n  .blob4 {\n    animation: move4 250s infinite alternate;\n  }\n  @keyframes move1 {\n    0% {\n      top: 5%;\n      left: 30%;\n      transform: rotate(0deg);\n    }\n    50% {\n      top: 35%;\n      left: 0;\n      transform: rotate(120deg);\n    }\n    100% {\n      top: 80%;\n      left: 80%;\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes move2 {\n    from {\n      top: 30%;\n      right: 20%;\n      transform: rotate(0deg);\n    }\n    to {\n      top: 80%;\n      right: 80%;\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes move3 {\n    from {\n      bottom: 20%;\n      right: 50%;\n    }\n    to {\n      bottom: 80%;\n      right: 60%;\n    }\n  }\n  @keyframes move4 {\n    0% {\n      top: 80%;\n      left: 70%;\n      transform: rotate(0deg);\n    }\n    50% {\n      top: 5%;\n      left: 75%;\n      transform: rotate(120deg);\n    }\n    100% {\n      top: 30%;\n      left: 10%;\n      transform: rotate(360deg);\n    }\n  }\n  .container {\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(5px);\n    border-radius: 10px;\n    box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\n    margin: 10px;\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    border-right: 1px solid rgba(255, 255, 255, 0.2);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n    overflow: hidden;\n  }\n\n  .imgContainer {\n    width: inherit;\n    max-width: 600px;\n    margin: 10px;\n  }\n\n  h3 {\n    font-size: 20px;\n    font-weight: normal;\n    font-style: italic;\n    padding: 0;\n    margin: 0;\n  }\n</style>\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n  props: {},\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","toggle_class","toggle","classList","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","config","storeLabel","countStore","logCleanup","previousValue","get","entryName","console","groupCollapsed","date","Date","hour","getHours","minutes","getMinutes","seconds","getSeconds","getMilliseconds","timeStamp","log","groupEnd","initial","JSON","parse","localStorage","warn","read","stringify","persistent","count","_undo","_redo","canUndo","canRedo","urdoCleanup","state","stack","old_value","current","undoable","actions","increment","decrement","urdo","undo","redo","countSlice","ctrlKey","which","preventDefault","title","x","y","tooltip","tooltipBody","mouseOver","TooltipBody","pageX","pageY","body","mouseMove","mouseLeave","digitCharacters","decode83","str","sRGBToLinear","v","pow","linearTosRGB","min","round","signPow","val","exp","abs","ValidationError","constructor","message","super","decodeDC","intG","intB","decodeAC","maximumValue","quantR","floor","quantG","quantB","blurhash","width","height","punch","sizeFlag","numY","numX","validateBlurhash","colors","substring","bytesPerRow","pixels","Uint8ClampedArray","r","g","j","basis","cos","PI","color","intR","dispatch","offset","throttle","once","threshold","disabled","className","visible","wasVisible","intersecting","removeHandlers","callEvents","observer","window","IntersectionObserver","IntersectionObserverEntry","isIntersecting","rootMargin","observe","unobserve","checkIsVisible","offsetWidth","offsetHeight","getClientRects","top","getBoundingClientRect","defaultBoundingClientRect","windowInnerHeight","innerHeight","documentElement","clientHeight","throttled","time","last","deferTimer","now","clearTimeout","setTimeout","throttleFn","alt","srcset","srcsetWebp","ratio","blur","sizes","lazy","wrapperClass","placeholderClass","blurhashSize","loaded","img","onload","canvas","decode","getContext","imageData","createImageData","putImageData"],"mappings":"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"}